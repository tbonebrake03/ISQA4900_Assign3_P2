{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: \"InvestmentList\",\n  data: () => ({\n    investments: [],\n    validUserName: \"Guest\",\n    investmentSize: 0,\n    showMsg: '',\n    isMobile: false,\n    authenticated: false,\n    headers: [{\n      text: 'Customer Number',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Category',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Description',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Acquired_Value',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Acquired_Date',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Recent_Value',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Recent_Date',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Update',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Delete',\n      sortable: false,\n      align: 'left'\n    }]\n  }),\n  mounted() {\n    this.authenticated = localStorage.getItem(\"isAuthenticated\");\n    this.getInvestments();\n    this.showMessages();\n  },\n  methods: {\n    onResize() {\n      if (window.innerWidth < 600) this.isMobile = true;else this.isMobile = false;\n    },\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getInvestments() {\n      apiService.getInvestmentList().then(response => {\n        this.investments = response.data.data;\n        this.investmentSize = this.investments.length;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    addNewInvestment() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        router.push('/investment-create');\n      } else {\n        router.push(\"/auth\");\n      }\n    },\n    updateInvestment(investment) {\n      router.push('/investment-create/' + investment.pk);\n    },\n    deleteInvestment(investment) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteInvestment(investment.pk).then(response => {\n          if (response.status === 204) {\n            router.push('/investment-list/deleted/');\n            this.getInvestments();\n          }\n        }).catch(error => {\n          if (error.response.status === 401) {\n            localStorage.clear();\n            router.push(\"/auth\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","investments","validUserName","investmentSize","showMsg","isMobile","authenticated","headers","text","sortable","align","mounted","localStorage","getItem","getInvestments","showMessages","methods","onResize","window","innerWidth","$route","params","msg","getInvestmentList","then","response","length","JSON","parse","catch","error","status","clear","push","addNewInvestment","updateInvestment","investment","pk","deleteInvestment","confirm"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/investments/investments-fe/src/components/InvestmentList.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 align-items-center justify-content-center\">\n                <blockquote>\n                    Welcome {{ validUserName }}!\n                    <footer>\n                        <small>\n                            <em>&mdash;Financial Services, your Midwest Financial Services Partner.</em>\n                        </small>\n                    </footer>\n                </blockquote>\n            </div>\n            <div class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\">\n                <div class=\"alert alert-success\"\n                     v-if=\"showMsg === 'new'\"\n                     :value=\"true\">\n                    New Investment has been added.\n                </div>\n                <div class=\"alert alert-success\"\n                     v-if=\"showMsg === 'update'\"\n                     :value=\"true\">\n                    Investment information has been updated.\n                </div>\n                <div class=\"alert alert-success\"\n                     v-if=\"showMsg === 'deleted'\"\n                     :value=\"true\">\n                    Selected investment has been deleted.\n                </div>\n            </div>\n        </div>\n        <!--Mobile device view-->\n               <div class=\"d-md-none\" id=\"collapsable-card\" style=\"width: 80%\">\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewInvestment\">\n                    <font-awesome-icon icon=\"plus\"/>\n                </button>\n                <div class=\"card\" v-for=\"investment in investments\" v-bind:key=\"investment\">\n                    <div class=\"card-header\" :id=\"'heading' + investment.name\">\n                        <button class=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\" :data-bs-target=\"'#collapse' + investment.pk\" \n                        aria-expanded=\"true\" :aria-controls=\"'collapse' + investment.pk\">\n                            <h6 style=\"color: #0275d8; float: left\">{{investment.category}}</h6>\n                        </button>\n                    </div>\n\n                    <div :id=\"'collapse' + investment.pk\" class=\"collapse\" :aria-labelledby=\"'heading' + investment.pk\" \n                    data-bs-parent=\"#collapsable-card\">\n                        <div class=\"card-body\">\n                            <p><b>Customer:</b> {{investment.customer}}</p>\n                            <p><b>Category:</b> {{investment.category}}</p>\n                            <p><b>Description:</b> {{investment.description}}</p>\n                            <p><b>Acquired Date:</b> {{investment.acquired_date}}</p>\n                            <p><b>Acquired Value:</b> {{investment.acquired_value}}</p>\n                            <p><b>Recent Date:</b> {{investment.recent_date}}</p>\n                            <p><b>Recent Value:</b> {{investment.recent_value}}</p>\n                            <div class=\"btn-group\">\n                                <button  @click=\"updateInvestment(investment)\" style=\"background-color: transparent; padding: 5;\">\n                                    <font-awesome-icon icon=\"pencil\"/></button>\n                                <button @click=\"deleteInvestment(investment)\" style=\"background-color: transparent; padding: 5;\">\n                                    <font-awesome-icon icon=\"trash\"/></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!--non-Mobile device view-->\n            <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\">\n                <table class=\"table table-hover\" style=\"overflow-y: auto\"\n                       :headers=\"headers\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Customer #</th>\n                        <th scope=\"col\">Category</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Acquired Value</th>\n                        <th scope=\"col\">Acquired Date</th>\n                        <th scope=\"col\">Recent Value</th>\n                        <th scope=\"col\">Recent Date</th>\n                        <th scope=\"col\">Update</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr v-for = \"investment in investments\" v-bind:key=\"investment\">\n                        <th scope=\"row\">{{investment.cust_number}}</th>\n                        <td>{{investment.category}}</td>\n                        <td>{{investment.description}}</td>\n                        <td>${{investment.acquired_value}}</td>\n                        <td>{{investment.acquired_date}}</td>\n                        <td>${{investment.recent_value}}</td>\n                        <td>{{investment.recent_date}}</td>\n                        <td @click=\"updateInvestment(investment)\"><button style=\"background-color: transparent; padding: 0;\">\n                            <font-awesome-icon icon=\"pencil\"/></button>\n                        </td>\n                        <td @click=\"deleteInvestment(investment)\"><button style=\"background-color: transparent; padding: 0;\">\n                            <font-awesome-icon icon=\"trash\"/></button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewInvestment\">Add New Investment</button>\n            </div>\n        </div>\n</template>\n\n<script>\nimport router from '../router';\nimport {APIService} from '../http/APIService';\n    const apiService = new APIService();\n    export default {\n        name: \"InvestmentList\",\n        data: () => ({\n            investments: [],\n            validUserName: \"Guest\",\n            investmentSize: 0,\n            showMsg: '',\n            isMobile: false,\n            authenticated: false,\n            headers: [\n                {text: 'Customer Number', sortable: false, align: 'left',},\n                {text: 'Category', sortable: false, align: 'left',},\n                {text: 'Description', sortable: false, align: 'left',},\n                {text: 'Acquired_Value', sortable: false, align: 'left',},\n                {text: 'Acquired_Date', sortable: false, align: 'left',},\n                {text: 'Recent_Value', sortable: false, align: 'left',},\n                {text: 'Recent_Date', sortable: false, align: 'left',},\n                {text: 'Update', sortable: false, align: 'left',},\n                {text: 'Delete', sortable: false, align: 'left',}\n            ],\n        }),\n        mounted() {\n            this.authenticated = localStorage.getItem(\"isAuthenticated\")\n            this.getInvestments();\n            this.showMessages();\n        },\n        methods: {\n            onResize() {\n                if (window.innerWidth < 600)\n                    this.isMobile = true;\n                else\n                    this.isMobile = false;\n            },\n            showMessages(){\n                if (this.$route.params.msg) {\n                    this.showMsg = this.$route.params.msg;\n                }\n            },\n            getInvestments() {\n                apiService.getInvestmentList().then(response => {\n                    this.investments = response.data.data;\n                    this.investmentSize = this.investments.length;\n                    if (localStorage.getItem(\"isAuthenticated\")\n                        && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n                    }\n                }).catch(error => {\n                    if (error.response.status === 401) {\n                        localStorage.clear();\n                        router.push(\"/auth\");\n                    }\n                });\n            },\n            addNewInvestment() {\n                if (localStorage.getItem(\"isAuthenticated\")\n                    && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    router.push('/investment-create');\n                } else {\n                    router.push(\"/auth\");\n                }\n            },\n            updateInvestment(investment) {\n                router.push('/investment-create/' + investment.pk);\n            },\n            deleteInvestment(investment) {\n                if(confirm(\"Do you really want to delete?\")) {\n                    apiService.deleteInvestment(investment.pk).then(response => {\n                        if (response.status === 204) {\n                            router.push('/investment-list/deleted/')\n                            this.getInvestments()\n                        }\n                    }).catch(error => {\n                        if (error.response.status === 401) {\n                            localStorage.clear();\n                            router.push(\"/auth\");\n                        }\n                    });\n                }\n            }\n        }\n    };\n</script>\n<style>\n    button {\n        padding: 1rem;\n        border: 0;\n        cursor: pointer;\n    }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}