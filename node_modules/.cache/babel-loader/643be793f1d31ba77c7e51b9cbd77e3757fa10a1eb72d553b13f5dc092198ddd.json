{"ast":null,"code":"import axios from 'axios';\n// Change the API_URL to the correct location of the backend API before deploying the app\nconst API_URL = 'http://127.0.0.1:8000'; /* 'http://localhost:8000' ‘http://127.0.0.1:8000’ or 'https://yourPythonAnywhereName.pythonanywhere.com'*/\n\nexport class APIService {\n  constructor() {}\n  getCustomer(param_pk) {\n    const url = `${API_URL}/api/customers/${param_pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  getCustomerList() {\n    const url = `${API_URL}/api/customers/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  getMyCustomerList() {\n    const url = `${API_URL}/api/mycustomers/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  addNewCustomer(customer) {\n    const url = `${API_URL}/api/customers/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.post(url, customer, {\n      headers: headers\n    });\n  }\n  updateCustomer(customer) {\n    const url = `${API_URL}/api/customers/${customer.pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.put(url, customer, {\n      headers: headers\n    });\n  }\n  deleteCustomer(customer_Pk) {\n    const url = `${API_URL}/api/customers/${customer_Pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.delete(url, {\n      headers: headers\n    });\n  }\n  getInvestment(param_pk) {\n    const url = `${API_URL}/api/investments/${param_pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  getInvestmentList() {\n    const url = `${API_URL}/api/investments`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  addNewInvestment(investment) {\n    const url = `${API_URL}/api/investments/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.post(url, investment, {\n      headers: headers\n    });\n  }\n  updateInvestment(investment) {\n    const url = `${API_URL}/api/investments/${investment.pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.put(url, investment, {\n      headers: headers\n    });\n  }\n  deleteInvestment(investment_Pk) {\n    const url = `${API_URL}/api/investments/${investment_Pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.delete(url, {\n      headers: headers\n    });\n  }\n  authenticateLogin(credentials) {\n    const url = `${API_URL}/api/`;\n    return axios.post(url, credentials);\n  }\n  registerUser(credentials) {\n    const url = `${API_URL}/register/`;\n    credentials.customusername = credentials.username;\n    return axios.post(url, credentials);\n  }\n  getUser(user) {\n    const url = `${API_URL}/api/getUser/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n}","map":{"version":3,"names":["axios","API_URL","APIService","constructor","getCustomer","param_pk","url","jwtToken","localStorage","getItem","headers","Authorization","get","getCustomerList","getMyCustomerList","addNewCustomer","customer","post","updateCustomer","pk","put","deleteCustomer","customer_Pk","delete","getInvestment","getInvestmentList","addNewInvestment","investment","updateInvestment","deleteInvestment","investment_Pk","authenticateLogin","credentials","registerUser","customusername","username","getUser","user"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/investments/investments-fe/src/http/APIService.js"],"sourcesContent":["import axios from 'axios';\n// Change the API_URL to the correct location of the backend API before deploying the app\nconst API_URL = 'http://127.0.0.1:8000'; /* 'http://localhost:8000' ‘http://127.0.0.1:8000’ or 'https://yourPythonAnywhereName.pythonanywhere.com'*/\n\n  export class APIService {\n    constructor() {\n      }\n     getCustomer(param_pk) {\n       const url = `${API_URL}/api/customers/${param_pk}`;\n       let jwtToken = localStorage.getItem('access');\n       const headers = {Authorization: `JWT ${jwtToken}`};\n       return axios.get(url,  {headers: headers});\n    } \n     getCustomerList() {\n      const url = `${API_URL}/api/customers/`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n      return axios.get(url,  {headers: headers});\n    }\n    getMyCustomerList() {\n      const url = `${API_URL}/api/mycustomers/`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n      return axios.get(url,  {headers: headers});\n    }\n\n    addNewCustomer(customer){\n     const url = `${API_URL}/api/customers/`;\n     let jwtToken = localStorage.getItem('access');\n     const headers = {Authorization: `JWT ${jwtToken}`};\n     return axios.post(url, customer, {headers: headers});\n    }\n    updateCustomer(customer){\n      const url = `${API_URL}/api/customers/${customer.pk}`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n       return axios.put(url, customer, {headers: headers});\n    }\n    deleteCustomer(customer_Pk){\n       const url = `${API_URL}/api/customers/${customer_Pk}`;\n       let jwtToken = localStorage.getItem('access');\n       const headers = {Authorization: `JWT ${jwtToken}`};\n       return axios.delete(url, {headers: headers});\n    }\n    getInvestment(param_pk) {\n      const url = `${API_URL}/api/investments/${param_pk}`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n      return axios.get(url, {headers: headers});\n   }\n     \n    getInvestmentList() {\n        const url = `${API_URL}/api/investments`;\n        let jwtToken = localStorage.getItem('access');\n        const headers = {Authorization: `JWT ${jwtToken}`};\n        return axios.get(url,  {headers: headers});\n   }\n    addNewInvestment(investment){\n      const url = `${API_URL}/api/investments/`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n      return axios.post(url, investment, {headers: headers});\n   } \n   updateInvestment(investment){\n     const url = `${API_URL}/api/investments/${investment.pk}`;\n     let jwtToken = localStorage.getItem('access');\n     const headers = {Authorization: `JWT ${jwtToken}`};\n     return axios.put(url, investment, {headers: headers});\n   } \n   deleteInvestment(investment_Pk){\n      const url = `${API_URL}/api/investments/${investment_Pk}`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n      return axios.delete(url, {headers: headers});\n   }\n   \n   authenticateLogin(credentials) {\n      const url = `${API_URL}/api/`;\n      return axios.post(url, credentials);\n    }\n   registerUser(credentials) {\n      const url = `${API_URL}/register/`;\n      credentials.customusername = credentials.username\n      return axios.post(url, credentials);\n    }\n    getUser(user){\n      const url = `${API_URL}/api/getUser/`;\n      let jwtToken = localStorage.getItem('access');\n      const headers = {Authorization: `JWT ${jwtToken}`};\n       return axios.get(url, {headers: headers});\n     }\n  }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}