{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'StockCreate',\n  components: {},\n  //prevent user from accessing this page if not authorized\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === false) {\n      router.push(\"/auth\");\n    }\n  },\n  data() {\n    return {\n      customers: [],\n      showError: false,\n      stock: {},\n      pageTitle: \"Add New Stock\",\n      isUpdate: false,\n      showMsg: '',\n      date: new Date(),\n      authenticated: false\n    };\n  },\n  computed: {\n    list: {\n      get() {\n        return this.customers;\n      },\n      set(newValue) {\n        this.customers = newValue;\n      }\n    }\n  },\n  methods: {\n    getCustomers() {\n      apiService.getCustomerList().then(response => {\n        this.customers = response.data.data;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    createStocks() {\n      apiService.addNewStock(this.stock).then(response => {\n        if (response.status === 201) {\n          this.stock = response.data;\n          this.showMsg = \"\";\n          router.push('/stock-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    },\n    cancelOperation() {\n      router.push(\"/investment-list\");\n    },\n    updateStocks() {\n      apiService.updateStocks(this.stock).then(response => {\n        if (response.status === 200) {\n          this.stock = response.data;\n          router.push('/stock-list/update');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  mounted() {\n    this.getCustomers();\n    if (this.$route.params.pk) {\n      this.pageTitle = \"Edit Stock\";\n      this.isUpdate = true;\n      apiService.getStock(this.$route.params.pk).then(response => {\n        this.stock = response.data;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","components","beforeCreate","localStorage","getItem","JSON","parse","authenticated","push","data","customers","showError","stock","pageTitle","isUpdate","showMsg","date","Date","computed","list","get","set","newValue","methods","getCustomers","getCustomerList","then","response","validUserName","catch","error","status","clear","createStocks","addNewStock","cancelOperation","updateStocks","mounted","$route","params","pk","getStock"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/investments/investments-fe/src/components/StockCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\" col align-items-center\">\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\n              <div class=\"alert alert-danger shadow\" role=\"alert\"\n              v-if=\"showMsg === 'error'\">\n                Please verify Stock Information\n              </div>\n            </div>\n          </div>\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\n              <div class=\"card\">\n                <div class=\"card-header\">{{pageTitle}}</div>\n                <div class=\"card-body\">\n                  <form ref=\"form\">\n                    <div class=\"container-fluid\">\n                      <div class=\" row justify-content-around py-2\">\n                        <label class=\"col-4\">Customer</label>\n                        <div class=\"col col-8\">\n                          <select v-model=\"stock.customer\" class=\"form-select\">\n                            <option class =\"form-select form-select-sm \" v-for=\" item in list\" :value=\"item.pk\" :key=\"item.pk\"> {{item.name}} </option>\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Symbol</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"stock.symbol\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>          \n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Name</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"stock.name\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div> \n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Shares</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"stock.shares\" type=\"number\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>   \n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Purchase Price</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"stock.purchase_price\" type=\"date\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Purchase Date</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"stock.purchase_date\" type=\"number\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"row justify-content-around\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"createStocks\">Save</div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"updateStocks\">Update</div>\n                        <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">Cancel</div>   \n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n    import router from '../router';\n    import {APIService} from '../http/APIService';\n    const apiService = new APIService();\n   \n    export default {\n      name: 'StockCreate',\n      components: {},\n                //prevent user from accessing this page if not authorized\n    beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true ){\n          this.authenticated = true\n        }\n        else {\n          this.authenticated = false\n        }\n        if(this.authenticated===false){\n            router.push(\"/auth\");\n          }\n     },\n      data() {\n        return {\n          customers: [],\n          showError: false,\n          stock: {},\n          pageTitle: \"Add New Stock\",\n          isUpdate: false,\n          showMsg: '',\n          date: new Date(),\n          authenticated: false\n        };\n      },\n      computed:{\n        list:{\n        get () {\n              return this.customers\n          },\n            set (newValue) {\n              this.customers = newValue\n            }\n        }\n      },\n      methods: {\n        getCustomers() {\n            apiService.getCustomerList().then(response => {\n                this.customers = response.data.data;\n                if (localStorage.getItem(\"isAuthenticated\")\n                && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    localStorage.clear();\n                    router.push(\"/auth\");\n                }\n            });\n        },\n        createStocks() {\n          apiService.addNewStock(this.stock).then(response => {\n            if (response.status === 201) {\n              this.stock = response.data;\n               this.showMsg = \"\";\n              router.push('/stock-list/new');\n            }else{\n                this.showMsg = \"error\";\n            }\n          }).catch(error => {\n            if (error.response.status === 401) {\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) {\n              this.showMsg = \"error\";\n            }\n          });\n        },\n        cancelOperation(){\n           router.push(\"/investment-list\");\n        },\n        updateStocks() {\n          apiService.updateStocks(this.stock).then(response => {\n            if (response.status === 200) {\n              this.stock = response.data;\n              router.push('/stock-list/update');\n            }else{\n                this.showMsg = \"error\";\n            }\n          }).catch(error => {\n            if (error.response.status === 401) {\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) {\n              this.showMsg = \"error\";\n            }\n          });\n        }\n      },\n      mounted() {\n        this.getCustomers();\n        if (this.$route.params.pk) {\n          this.pageTitle = \"Edit Stock\";\n          this.isUpdate = true;\n          apiService.getStock(this.$route.params.pk).then(response => {\n            this.stock = response.data;\n          }).catch(error => {\n            if (error.response.status === 401) {\n              router.push(\"/auth\");\n            }\n          });\n        }\n      },\n    }\n  </script>\n  \n  <style scoped>\n    .aform {\n      margin-left: auto;\n      width: 60%;\n    }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}